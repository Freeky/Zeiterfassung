<?php

require_once '\..\source\controls\admin\Controller.php';
require_once '\..\source\controls\admin\User.php';

$db_host='localhost';
$db_name='timetraveler';
$db_user='fugu';
$db_pass='fugu';

$db_link= mysql_connect ($db_host, $db_user, $db_pass);
mysql_selectdb($db_name,$db_link);

/**
 * Test class for Controller.
 * Generated by PHPUnit on 2011-05-06 at 18:07:59.
 */
class ControllerTest extends PHPUnit_Framework_TestCase
{
    /**
     * @var Controller
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->object = new Controller;
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
    }

	public function testCheckLogin()
	{
		$this->assertEquals(true,$this->object->checkLogin("test", "test"));
		$this->assertEquals(false,$this->object->checkLogin("test", ""));
		$this->assertEquals(false,$this->object->checkLogin("test", "keintest"));
	}
	
	public function testCheckUsername()
	{
		$this->assertEquals(false,$this->object->checkUserNameAlreadyExists("test","1"));
		$this->assertEquals(true,$this->object->checkUserNameAlreadyExists("test","2"));
	}
	
	public function testCreateUserObject()
	{
		$testuid="1";
		$testname="test";
		$testpassword=hash("sha512","test");
		$testpwlen="4";
		$testadmin="1";
		$user=$this->object->CreateUserObject(1);
		
		$this->assertEquals($testuid,$user->getUID());
		$this->assertEquals($testname,$user->getName());
		$this->assertEquals($testpassword,$user->getPassword());
		$this->assertEquals($testpwlen,$user->getPasswordLen());
		$this->assertEquals($testadmin,$user->getAdmin());
	}
	
	
	/**
	 * @depends testCreateUserObject
	 */
	public function testSaveUser()
	{
		$name="name";
		$pass=hash("sha512","pass");
		$pw_len="4";
		$admin="1";
		$user=new User();
		
		$user->setName($name);
		$user->setPasswordHash($pass);
		$user->setPasswordLen($pw_len);
		$user->setAdmin($admin);
		$this->assertEquals(true,$this->object->saveUser($user));
		
		$ScanRow=mysql_fetch_array(mysql_query("SELECT uid FROM user WHERE name='$name'"));
		$uid=$ScanRow['uid'];
		
		$this->assertEquals(true,$this->DataIsInDatabase($uid,$name,$pass,$pw_len,$admin));
	}
	
	/**
	 * @depends testSaveUser
	 */
	public function testEditUser()
	{
		$ScanRow=mysql_fetch_array(mysql_query("SELECT uid FROM user WHERE name='name'"));
		$uid=$ScanRow['uid'];
		$user=$this->object->CreateUserObject($uid);
		$pass=$user->getPassword();
		$pw_len=$user->getPasswordLen();
		$admin=$user->getAdmin();
		
		$this->assertEquals(true,$this->object->saveUser($user));
		$user->setName("test");
		$this->assertEquals(false,$this->object->saveUser($user));
		$user->setName("name2");
		$this->assertEquals(true,$this->object->saveUser($user));
		$this->assertEquals(true,$this->DataIsInDatabase($uid,name2,$pass,$pw_len,$admin));
	}
	
	/**
	 * @depends testEditUser
	 */
	public function testgetAllUsers()
	{
		$uid="1";
		$name="test";
		$pass=hash("sha512","test");
		$pw_len="4";
		$admin="1";
		
		$ScanRow=mysql_fetch_array(mysql_query("SELECT uid FROM user WHERE name='name2'"));
		$uid2=$ScanRow['uid'];
		$name2="name";
		$pass2=hash("sha512","pass");
		$pw_len2="4";
		$admin2="1";
		
		$users=$this->object->getAllUsers();
		
		$user1okay=false;
		$user2okay=false;
		for($i=0;$i<count($users);$i++)
		{
			if($users[$i]->getUID()==$uid){$user1okay=true;}
			if($users[$i]->getUID()==$uid2){$user2okay=true;}
		}
		if(!$user1okay||!$user2okay)
		{
			$this->fail();
		}
	}
	
	/**
	 * @depends testgetAllUsers
	 */
	public function testDeleteUser()
	{
		$ScanRow=mysql_fetch_array(mysql_query("SELECT uid FROM user WHERE name='name2'"));
		$uid2=$ScanRow['uid'];
		$name2="name2";
		$pass2=hash("sha512","pass");
		$pw_len2="4";
		$admin2="1";
		
		$user=new User();
		$user->setUID($uid2);
		$user->setName($name2);
		$user->setPasswordHash($pass2);
		$user->setPasswordLen($pw_len2);
		$user->setAdmin($admin2);
		$this->object->deleteUser($user);
		$this->assertEquals(false,$this->DataIsInDatabase($uid2,$name2,$pass2,$pw_len2,$admin2));
	}
	
	private function DataIsInDatabase($uid,$name,$pass,$pw_len,$admin)
	{
		$result=mysql_query("SELECT * FROM user WHERE uid='$uid' AND name='$name' AND password='$pass' AND pw_len='$pw_len' AND admin='$admin'");
		return mysql_num_rows($result)>0;
	}
}
?>
